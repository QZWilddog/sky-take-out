#  配置嵌入式的服务器（通常是 Tomcat 它允许你指定服务器相关的属性
server:
  port: 8080
  # 应用监听的端口号。默认值为8080

# 配置 Spring Boot 应用程序的相关属性 用于配置整个应用程序的行为，涵盖了许多方面，如应用程序的基本信息、数据库连接、安全性设置、缓存、邮件服务等。
spring:
  # 定义应用程序的元信息
  application:
    name: sky-take-out
    # 设置当前 Spring Boot 应用的名称（应用名），这个名称通常用于日志、监控等场景，表示整个项目的名字。

  # 配置多环境支持，允许根据不同的环境加载不同的配置文件或配置内容。
  profiles:
    active: dev # 指定当前配置文件为开发环境
    # 指定当前激活的环境配置，例如 dev（开发环境）、test（测试环境）、prod（生产环境）。

 # 用于配置 Spring Boot 应用程序的核心行为，通常涉及应用程序的启动和运行时的行为。
  main:
    allow-circular-references: true
    # 允许 Spring 容器中存在循环依赖。如果某些 Bean 之间相互依赖，开启此选项可以避免启动报错。

  # 配置数据库连接属性，如驱动类名、URL、用户名和密码等。
  datasource:
    driver-class-name: ${sky.datasource.driver-class-name}
    # 数据库驱动类名，${} 表示从外部配置（如环境变量或配置文件）中读取值。
    url: jdbc:mysql://${sky.datasource.host}:${sky.datasource.port}/${sky.datasource.database}?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true
    # 数据库连接 URL，包含主机地址、端口、数据库名等信息。
    # serverTimezone=Asia/Shanghai：设置时区为上海。
    # useUnicode=true&characterEncoding=utf-8：支持中文字符。
    # zeroDateTimeBehavior=convertToNull：将无效日期转换为 null。
    # useSSL=false：禁用 SSL 加密连接。
    # allowPublicKeyRetrieval=true：允许客户端获取公钥。
    username: ${sky.datasource.username}
    # 数据库用户名，从外部配置中读取。
    password: ${sky.datasource.password}
    # 数据库密码，从外部配置中读取。

  # 配置与 Servlet 相关的属性，如文件上传限制、会话管理等。
  servlet:
    # 数据处理的相关属性。
    multipart:
      max-file-size: 10MB
      # 最大单个文件大小，限制上传文件的大小不能超过 10MB。
      max-request-size: 100MB
      # 最大请求大小，包括所有文件和表单数据的总大小，不能超过 100MB。

# 配置 MyBatis 框架的行为，如 Mapper 文件位置、实体类包路径、驼峰命名规则等。
mybatis:
  mapper-locations: classpath:mapper/*.xml
  # MyBatis 的 Mapper 配置文件路径，classpath 表示在 resources 目录下查找,配置不符合spirng规范导致无法直接找到这些文件
  type-aliases-package: cn.zimeedu.sky.entity
  # MyBatis 的实体类包路径，指定实体类所在的包, 这样可以简写返回对象值 不用写全类名
  configuration:
    # 设置 MyBatis 运行时的行为，比如是否启用缓存、如何处理命名规则映射等
    map-underscore-to-camel-case: true
    # 开启驼峰命名规则映射，例如数据库字段名 user_name 自动映射到实体类属性 userName。
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
#    # MyBatis 日志实现，使用标准输出作为日志输出

#spring事务管理日志  为某个类，方法，包设置日志级别  开启事务管理日志
logging:
  # 设置日志记录器（Logger）的日志级别的
  level:
    com:
      sky:
        mapper: debug
        # 设置 Mapper 层的日志级别为 debug，方便调试 SQL 执行情况。
        service: info
        # 设置 Service 层的日志级别为 info，记录一般性日志信息。
        controller: info
        # 设置 Controller 层的日志级别为 info，记录接口调用日志。
    org.springframework.jdbc.support.JdbcTransactionManager: debug
    # 并且 Spring 正在记录与事务管理相关的调试信息。这些日志通常会包含事务的创建、提交、回滚等详细操作信息，比如：

# 自定义配置前缀和属性
sky:
  jwt:
    admin-secret-key: woaini
    # JWT 签名加密时使用的秘钥，用于生成和解析令牌。  这里spirng框架可以自动转换 这里用-可以转换为驼命名
    admin-ttl: 86400000
    # JWT 的过期时间
    admin-token-name: token
    # 前端传递过来的令牌名称，用于标识 HTTP 请求头中的 Token。
  alioss:
    endpoint: ${sky.alioss.endpoint}
    # 阿里云 OSS 的访问域名（Endpoint）
    region: ${sky.alioss.reqion}
    #  阿里云 OSS 所属的区域（Region）
    access-key-id: ${sky.alioss.access-key-id}
    access-key-secret: ${sky.alioss.access-key-secret}
    bucket-name: ${sky.alioss.bucket-name}
    # 阿里云 OSS 的存储空间名称（Bucket Name）

